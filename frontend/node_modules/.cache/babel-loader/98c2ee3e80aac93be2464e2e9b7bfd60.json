{"ast":null,"code":"import { GAME_CONFIG_SET_MODE, GAME_CONFIG_SET_DIFFICULTY, GAME_CONFIG_UPDATE_DICE, GAME_CONFIG_RESET_DICE, GAME_CONFIG_SET_START, GAME_CONFIG_RESET_DICE_SIX_COUNT, GAME_CONFIG_SET_CURRENT, GAME_CONFIG_SET_WINNER, GAME_UPDATE_PERFECT_THROWS } from '../Constants';\nimport Immutable from 'immutable';\nconst game_data = Immutable.Map({\n  config: Immutable.Map({\n    mode: '',\n    difficulty: '',\n    dice: 0,\n    dice_six_count: 0,\n    current: 0,\n    start: false,\n    winner: null,\n    perfect_throws: null\n  })\n});\n\nfunction game() {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : game_data;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GAME_CONFIG_SET_MODE:\n      return data.setIn(['config', 'mode'], action.payload);\n\n    case GAME_CONFIG_SET_DIFFICULTY:\n      return data.setIn(['config', 'difficulty'], action.payload);\n\n    case GAME_CONFIG_SET_START:\n      return data.setIn(['config', 'start'], true);\n\n    case GAME_CONFIG_UPDATE_DICE:\n      if (action.payload === 6) {\n        let dice_six_count = data.get('config').get('dice_six_count') + 1;\n        data = data.setIn(['config', 'dice_six_count'], dice_six_count);\n      }\n\n      return data.setIn(['config', 'dice'], action.payload);\n\n    case GAME_CONFIG_RESET_DICE:\n      return data.setIn(['config', 'dice'], 0);\n\n    case GAME_CONFIG_RESET_DICE_SIX_COUNT:\n      return data.setIn(['config', 'dice_six_count'], 0);\n\n    case GAME_CONFIG_SET_CURRENT:\n      return data.setIn(['config', 'current'], action.payload);\n\n    case GAME_CONFIG_SET_WINNER:\n      return data.setIn(['config', 'winner'], action.payload);\n\n    case GAME_UPDATE_PERFECT_THROWS:\n      return data.setIn(['config', 'perfect_throws'], action.payload);\n\n    default:\n      return data;\n  }\n}\n\nexport default game;","map":{"version":3,"sources":["C:/Users/Mustafa Kemal AYAS/Desktop/untitled/frontend/src/redux/reducers/Game.js"],"names":["GAME_CONFIG_SET_MODE","GAME_CONFIG_SET_DIFFICULTY","GAME_CONFIG_UPDATE_DICE","GAME_CONFIG_RESET_DICE","GAME_CONFIG_SET_START","GAME_CONFIG_RESET_DICE_SIX_COUNT","GAME_CONFIG_SET_CURRENT","GAME_CONFIG_SET_WINNER","GAME_UPDATE_PERFECT_THROWS","Immutable","game_data","Map","config","mode","difficulty","dice","dice_six_count","current","start","winner","perfect_throws","game","data","action","type","setIn","payload","get"],"mappings":"AAAA,SACCA,oBADD,EAECC,0BAFD,EAGCC,uBAHD,EAICC,sBAJD,EAKCC,qBALD,EAMCC,gCAND,EAOCC,uBAPD,EAQCC,sBARD,EASCC,0BATD,QAWO,cAXP;AAYA,OAAOC,SAAP,MAAsB,WAAtB;AAGA,MAAMC,SAAS,GAAGD,SAAS,CAACE,GAAV,CAAc;AAC/BC,EAAAA,MAAM,EAAEH,SAAS,CAACE,GAAV,CAAc;AACrBE,IAAAA,IAAI,EAAE,EADe;AAErBC,IAAAA,UAAU,EAAE,EAFS;AAGrBC,IAAAA,IAAI,EAAE,CAHe;AAIrBC,IAAAA,cAAc,EAAE,CAJK;AAKrBC,IAAAA,OAAO,EAAE,CALY;AAMrBC,IAAAA,KAAK,EAAE,KANc;AAOrBC,IAAAA,MAAM,EAAE,IAPa;AAQrBC,IAAAA,cAAc,EAAE;AARK,GAAd;AADuB,CAAd,CAAlB;;AAeA,SAASC,IAAT,GAA0C;AAAA,MAA3BC,IAA2B,uEAApBZ,SAAoB;AAAA,MAATa,MAAS;;AAEzC,UAAQA,MAAM,CAACC,IAAf;AAEO,SAAKxB,oBAAL;AACL,aAAOsB,IAAI,CAACG,KAAL,CAAW,CAAC,QAAD,EAAW,MAAX,CAAX,EAA+BF,MAAM,CAACG,OAAtC,CAAP;;AAGK,SAAKzB,0BAAL;AACL,aAAOqB,IAAI,CAACG,KAAL,CAAW,CAAC,QAAD,EAAW,YAAX,CAAX,EAAqCF,MAAM,CAACG,OAA5C,CAAP;;AAGK,SAAKtB,qBAAL;AACL,aAAOkB,IAAI,CAACG,KAAL,CAAW,CAAC,QAAD,EAAW,OAAX,CAAX,EAAgC,IAAhC,CAAP;;AAGK,SAAKvB,uBAAL;AACC,UAAIqB,MAAM,CAACG,OAAP,KAAmB,CAAvB,EAA2B;AAC1B,YAAIV,cAAc,GAAGM,IAAI,CAACK,GAAL,CAAS,QAAT,EAAmBA,GAAnB,CAAuB,gBAAvB,IAA2C,CAAhE;AACNL,QAAAA,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAW,CAAC,QAAD,EAAW,gBAAX,CAAX,EAAyCT,cAAzC,CAAP;AACM;;AACP,aAAOM,IAAI,CAACG,KAAL,CAAW,CAAC,QAAD,EAAW,MAAX,CAAX,EAA+BF,MAAM,CAACG,OAAtC,CAAP;;AAGD,SAAKvB,sBAAL;AACC,aAAOmB,IAAI,CAACG,KAAL,CAAW,CAAC,QAAD,EAAW,MAAX,CAAX,EAA+B,CAA/B,CAAP;;AAGD,SAAKpB,gCAAL;AACC,aAAOiB,IAAI,CAACG,KAAL,CAAW,CAAC,QAAD,EAAW,gBAAX,CAAX,EAAyC,CAAzC,CAAP;;AAGD,SAAKnB,uBAAL;AACC,aAAOgB,IAAI,CAACG,KAAL,CAAW,CAAC,QAAD,EAAW,SAAX,CAAX,EAAkCF,MAAM,CAACG,OAAzC,CAAP;;AAGD,SAAKnB,sBAAL;AACC,aAAOe,IAAI,CAACG,KAAL,CAAW,CAAC,QAAD,EAAW,QAAX,CAAX,EAAiCF,MAAM,CAACG,OAAxC,CAAP;;AAGD,SAAKlB,0BAAL;AACC,aAAOc,IAAI,CAACG,KAAL,CAAW,CAAC,QAAD,EAAW,gBAAX,CAAX,EAAyCF,MAAM,CAACG,OAAhD,CAAP;;AAGD;AACC,aAAOJ,IAAP;AA3CF;AA+CA;;AAID,eAAeD,IAAf","sourcesContent":["import {\r\n\tGAME_CONFIG_SET_MODE,\r\n\tGAME_CONFIG_SET_DIFFICULTY,\r\n\tGAME_CONFIG_UPDATE_DICE,\r\n\tGAME_CONFIG_RESET_DICE,\r\n\tGAME_CONFIG_SET_START,\r\n\tGAME_CONFIG_RESET_DICE_SIX_COUNT,\r\n\tGAME_CONFIG_SET_CURRENT,\r\n\tGAME_CONFIG_SET_WINNER,\r\n\tGAME_UPDATE_PERFECT_THROWS,\r\n\r\n} from '../Constants';\r\nimport Immutable from 'immutable';\r\n\r\n\r\nconst game_data = Immutable.Map({\r\n\tconfig: Immutable.Map({\r\n\t\tmode: '',\r\n\t\tdifficulty: '',\r\n\t\tdice: 0,\r\n\t\tdice_six_count: 0,\r\n\t\tcurrent: 0,\r\n\t\tstart: false,\r\n\t\twinner: null,\r\n\t\tperfect_throws: null,\r\n    }),\r\n});\r\n\r\n\r\n\r\nfunction game( data = game_data, action ) {\r\n\r\n\tswitch (action.type) {\r\n\r\n        case GAME_CONFIG_SET_MODE:\r\n\t\t\treturn data.setIn(['config', 'mode'], action.payload );\r\n\r\n\r\n        case GAME_CONFIG_SET_DIFFICULTY:\r\n\t\t\treturn data.setIn(['config', 'difficulty'], action.payload );\r\n\r\n\r\n        case GAME_CONFIG_SET_START:\r\n\t\t\treturn data.setIn(['config', 'start'], true );\r\n\r\n\r\n        case GAME_CONFIG_UPDATE_DICE:\r\n        \tif( action.payload === 6 ) {\r\n        \t\tlet dice_six_count = data.get('config').get('dice_six_count') + 1;\r\n\t\t\t\tdata = data.setIn(['config', 'dice_six_count'], dice_six_count );\r\n        \t}\r\n\t\t\treturn data.setIn(['config', 'dice'], action.payload );\r\n\r\n\r\n\t\tcase GAME_CONFIG_RESET_DICE:\r\n\t\t\treturn data.setIn(['config', 'dice'], 0 );\r\n\r\n\r\n\t\tcase GAME_CONFIG_RESET_DICE_SIX_COUNT:\r\n\t\t\treturn data.setIn(['config', 'dice_six_count'], 0 );\r\n\r\n\r\n\t\tcase GAME_CONFIG_SET_CURRENT:\r\n\t\t\treturn data.setIn(['config', 'current'], action.payload );\r\n\r\n\r\n\t\tcase GAME_CONFIG_SET_WINNER:\r\n\t\t\treturn data.setIn(['config', 'winner'], action.payload );\r\n\r\n\r\n\t\tcase GAME_UPDATE_PERFECT_THROWS:\r\n\t\t\treturn data.setIn(['config', 'perfect_throws'], action.payload );\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\nexport default game;\r\n\r\n"]},"metadata":{},"sourceType":"module"}